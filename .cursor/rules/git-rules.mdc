---
description: 
globs: 
alwaysApply: true
---
# Git運用ルール（SES案件・技術者管理アプリ）

## 1. ブランチ戦略
- **mainブランチ**：本番リリース用。常に安定した状態を保つ。
- **developブランチ**：開発の基幹ブランチ。日常的な開発はここで行う。
- **feature/xxx**：新機能開発用。`feature/`プレフィックス＋内容で命名。
- **fix/xxx**：バグ修正用。`fix/`プレフィックス＋内容で命名。
- **hotfix/xxx**：本番緊急修正用。
- **release/xxx**：リリース準備用。
## 2. ブランチ運用ルール
- mainへの直接コミットは禁止。必ずプルリクエスト（PR）経由でマージ。
- feature/fix/hotfixブランチはdevelopから分岐し、作業完了後developへPRでマージ。
- releaseブランチはdevelopから分岐し、リリース準備後mainへマージ。
- 本番反映が必要なhotfixはmainから分岐し、mainとdevelopの両方へマージ。

## 3. コミットメッセージ規約
- コミットメッセージは日本語または英語で簡潔に記述。
- 先頭に種別を記載（例：`feat: 新規機能追加`, `fix: バグ修正`, `docs: ドキュメント修正`）
- 例：
  - feat: 案件登録APIの実装
  - fix: ログインバグ修正
  - docs: 要件定義書の追記

## 4. プルリクエスト（PR）運用
- PR作成時は概要・目的・変更内容・影響範囲・テスト内容を記載。
- レビュー担当者を必ずアサイン。
- 1人以上の承認を得てからマージ。
- コンフリクトがないことを確認してからマージ。

## 5. その他
- 不要なファイルや機密情報（.env等）は.gitignoreで管理。
- 定期的にmain・developをpullして最新状態を保つ。
- 大きな機能追加や設計変更時は事前に相談・合意を取る。

---

ご不明点や追加ルールのご要望があれば、随時追記・修正してください。 
